name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.12"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Set up Node.js for JavaScript test service
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
    
    - name: Install JavaScript test service dependencies
      run: |
        cd tests/js_service
        npm install
    
    - name: Start JavaScript test service
      run: |
        cd tests/js_service
        node server.js &
        sleep 5
        # Verify service is running
        curl -f http://localhost:3000/health || exit 1
    
    # - name: Run linting
    #   run: |
    #     flake8 src tests --max-line-length=88 --extend-ignore=E203,W503
    #     black --check src tests
    #     isort --check-only src tests
    
    # - name: Run type checking
    #   run: |
    #     mypy src
    
    - name: Run tests with coverage
      run: |
        pytest --cov=lean4url --cov-report=xml --cov-report=term-missing
    
    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.11'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  integration-test:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
        cd tests/js_service
        npm install
    
    - name: Run integration tests
      run: |
        cd tests/js_service
        node server.js &
        sleep 5
        cd ../..
        # Run specific integration tests
        pytest tests/test_core.py::TestJavaScriptCompatibility -v

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install safety bandit
        pip install -e .
    
    - name: Run safety check
      run: |
        safety check
    
    - name: Run bandit security linter
      run: |
        bandit -r src/
